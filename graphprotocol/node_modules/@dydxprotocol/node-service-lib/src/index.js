import BigNumber from 'bignumber.js';
import logger from './helpers/logger';

export { default as env } from './helpers/env';
export { default as Server } from './server';
export const Logger = logger;
export { default as sequelize } from './helpers/sequelize';
export { default as Sequelize } from 'sequelize';
export { default as authorizationMiddleware } from './middlewares/authorization';
export * from './helpers/validators';
export * from './helpers/error-handler';
export { close, reset } from './test/database';

process.on('unhandledRejection', (error, promise) => {
  logger.error({
    at: 'errorHandler#unhandledRejection',
    message: 'Unhandled Promise Rejection',
    promise,
    error,
  });
});

// By default BigNumber's `toString` method converts to exponential notation if the value has
// more then 20 digits. We want to avoid this behavior, so we set EXPONENTIAL_AT to a high number
BigNumber.config({
  EXPONENTIAL_AT: 1000,
});
