'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (index) {
  const app = (0, _express2.default)();

  // This needs to be the first middleware
  app.use(_bugsnag2.default.requestHandler);
  const corsOptions = {
    origin: process.env.CORS_ORIGIN,
    optionsSuccessStatus: 200
  };
  app.use((0, _cors2.default)(corsOptions));

  app.get('/health', (req, res) => {
    res.status(200).json({ ok: true });
  });

  app.use((req, res, next) => next());

  app.use(_bodyParser2.default.json());

  app.use(_requestLogger2.default);

  if (index) {
    app.use('/v1', index);
  }

  // This needs to be the last non-error middleware
  app.use(_bugsnag2.default.errorHandler);

  app.use((req, res) => {
    res.status(404).json({
      error: 'Not Found',
      errorCode: 404
    });
  });

  return app;
};

var _bodyParser = require('body-parser');

var _bodyParser2 = _interopRequireDefault(_bodyParser);

var _cors = require('cors');

var _cors2 = _interopRequireDefault(_cors);

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _bugsnag = require('./helpers/bugsnag');

var _bugsnag2 = _interopRequireDefault(_bugsnag);

var _requestLogger = require('./middlewares/request-logger');

var _requestLogger2 = _interopRequireDefault(_requestLogger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiaW5kZXgiLCJhcHAiLCJ1c2UiLCJCdWdzbmFnIiwicmVxdWVzdEhhbmRsZXIiLCJjb3JzT3B0aW9ucyIsIm9yaWdpbiIsInByb2Nlc3MiLCJlbnYiLCJDT1JTX09SSUdJTiIsIm9wdGlvbnNTdWNjZXNzU3RhdHVzIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwianNvbiIsIm9rIiwibmV4dCIsImJvZHlQYXJzZXIiLCJSZXF1ZXN0TG9nZ2VyIiwiZXJyb3JIYW5kbGVyIiwiZXJyb3IiLCJlcnJvckNvZGUiXSwibWFwcGluZ3MiOiI7Ozs7OztrQkFTZSxVQUFVQSxLQUFWLEVBQWlCO0FBQzlCLFFBQU1DLE1BQU0sd0JBQVo7O0FBRUE7QUFDQUEsTUFBSUMsR0FBSixDQUFRQyxrQkFBUUMsY0FBaEI7QUFDQSxRQUFNQyxjQUFjO0FBQ2xCQyxZQUFRQyxRQUFRQyxHQUFSLENBQVlDLFdBREY7QUFFbEJDLDBCQUFzQjtBQUZKLEdBQXBCO0FBSUFULE1BQUlDLEdBQUosQ0FBUSxvQkFBS0csV0FBTCxDQUFSOztBQUVBSixNQUFJVSxHQUFKLENBQVEsU0FBUixFQUFtQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMvQkEsUUFBSUMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLEVBQUVDLElBQUksSUFBTixFQUFyQjtBQUNELEdBRkQ7O0FBSUFmLE1BQUlDLEdBQUosQ0FBUSxDQUFDVSxHQUFELEVBQU1DLEdBQU4sRUFBV0ksSUFBWCxLQUFvQkEsTUFBNUI7O0FBRUFoQixNQUFJQyxHQUFKLENBQVFnQixxQkFBV0gsSUFBWCxFQUFSOztBQUVBZCxNQUFJQyxHQUFKLENBQVFpQix1QkFBUjs7QUFFQSxNQUFJbkIsS0FBSixFQUFXO0FBQ1RDLFFBQUlDLEdBQUosQ0FBUSxLQUFSLEVBQWVGLEtBQWY7QUFDRDs7QUFFRDtBQUNBQyxNQUFJQyxHQUFKLENBQVFDLGtCQUFRaUIsWUFBaEI7O0FBRUFuQixNQUFJQyxHQUFKLENBQVEsQ0FBQ1UsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDcEJBLFFBQUlDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQk0sYUFBTyxXQURZO0FBRW5CQyxpQkFBVztBQUZRLEtBQXJCO0FBSUQsR0FMRDs7QUFPQSxTQUFPckIsR0FBUDtBQUNELEM7O0FBM0NEOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0EiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLWNvbnNvbGU6IDAgKi9cblxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IEJ1Z3NuYWcgZnJvbSAnLi9oZWxwZXJzL2J1Z3NuYWcnO1xuaW1wb3J0IFJlcXVlc3RMb2dnZXIgZnJvbSAnLi9taWRkbGV3YXJlcy9yZXF1ZXN0LWxvZ2dlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChpbmRleCkge1xuICBjb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbiAgLy8gVGhpcyBuZWVkcyB0byBiZSB0aGUgZmlyc3QgbWlkZGxld2FyZVxuICBhcHAudXNlKEJ1Z3NuYWcucmVxdWVzdEhhbmRsZXIpO1xuICBjb25zdCBjb3JzT3B0aW9ucyA9IHtcbiAgICBvcmlnaW46IHByb2Nlc3MuZW52LkNPUlNfT1JJR0lOLFxuICAgIG9wdGlvbnNTdWNjZXNzU3RhdHVzOiAyMDAsXG4gIH07XG4gIGFwcC51c2UoY29ycyhjb3JzT3B0aW9ucykpO1xuXG4gIGFwcC5nZXQoJy9oZWFsdGgnLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG9rOiB0cnVlIH0pO1xuICB9KTtcblxuICBhcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4gbmV4dCgpKTtcblxuICBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuICBhcHAudXNlKFJlcXVlc3RMb2dnZXIpO1xuXG4gIGlmIChpbmRleCkge1xuICAgIGFwcC51c2UoJy92MScsIGluZGV4KTtcbiAgfVxuXG4gIC8vIFRoaXMgbmVlZHMgdG8gYmUgdGhlIGxhc3Qgbm9uLWVycm9yIG1pZGRsZXdhcmVcbiAgYXBwLnVzZShCdWdzbmFnLmVycm9ySGFuZGxlcik7XG5cbiAgYXBwLnVzZSgocmVxLCByZXMpID0+IHtcbiAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICBlcnJvcjogJ05vdCBGb3VuZCcsXG4gICAgICBlcnJvckNvZGU6IDQwNCxcbiAgICB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIGFwcDtcbn1cbiJdfQ==