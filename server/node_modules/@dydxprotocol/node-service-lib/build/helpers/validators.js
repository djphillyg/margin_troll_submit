'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toBigNumber = exports.isNonZeroEthAddress = exports.isEthAddress = exports.isEthTransaction = exports.isUuid = undefined;

var _web = require('web3');

var _web2 = _interopRequireDefault(_web);

var _bignumber = require('bignumber.js');

var _bignumber2 = _interopRequireDefault(_bignumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const web3 = new _web2.default();

const uuidRe = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i;
const ethTransRe = /^0x([A-Fa-f0-9]{64})$/;
const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';

const isUuid = exports.isUuid = value => {
  if (typeof value === 'string' && uuidRe.test(value)) {
    return true;
  }
  throw new Error('Invalid UUID');
};

const isEthTransaction = exports.isEthTransaction = value => {
  if (typeof value === 'string' && ethTransRe.test(value)) {
    return true;
  }
  throw new Error('Invalid ETH Transaction format');
};

const isEthAddress = exports.isEthAddress = value => web3.isAddress(value);

const isNonZeroEthAddress = exports.isNonZeroEthAddress = value => isEthAddress(value) && value !== ZERO_ADDRESS;

const toBigNumber = exports.toBigNumber = value => new _bignumber2.default(value);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL3ZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsid2ViMyIsIldlYjMiLCJ1dWlkUmUiLCJldGhUcmFuc1JlIiwiWkVST19BRERSRVNTIiwiaXNVdWlkIiwidmFsdWUiLCJ0ZXN0IiwiRXJyb3IiLCJpc0V0aFRyYW5zYWN0aW9uIiwiaXNFdGhBZGRyZXNzIiwiaXNBZGRyZXNzIiwiaXNOb25aZXJvRXRoQWRkcmVzcyIsInRvQmlnTnVtYmVyIiwiQmlnTnVtYmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRUEsTUFBTUEsT0FBTyxJQUFJQyxhQUFKLEVBQWI7O0FBRUEsTUFBTUMsU0FBUywrREFBZjtBQUNBLE1BQU1DLGFBQWEsdUJBQW5CO0FBQ0EsTUFBTUMsZUFBZSw0Q0FBckI7O0FBRU8sTUFBTUMsMEJBQVVDLEtBQUQsSUFBVztBQUMvQixNQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBakIsSUFBNkJKLE9BQU9LLElBQVAsQ0FBWUQsS0FBWixDQUFqQyxFQUFxRDtBQUNuRCxXQUFPLElBQVA7QUFDRDtBQUNELFFBQU0sSUFBSUUsS0FBSixDQUFVLGNBQVYsQ0FBTjtBQUNELENBTE07O0FBT0EsTUFBTUMsOENBQW9CSCxLQUFELElBQVc7QUFDekMsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQTZCSCxXQUFXSSxJQUFYLENBQWdCRCxLQUFoQixDQUFqQyxFQUF5RDtBQUN2RCxXQUFPLElBQVA7QUFDRDtBQUNELFFBQU0sSUFBSUUsS0FBSixDQUFVLGdDQUFWLENBQU47QUFDRCxDQUxNOztBQU9BLE1BQU1FLHNDQUFlSixTQUFTTixLQUFLVyxTQUFMLENBQWVMLEtBQWYsQ0FBOUI7O0FBRUEsTUFBTU0sb0RBQXNCTixTQUFVSSxhQUFhSixLQUFiLEtBQXVCQSxVQUFVRixZQUF2RTs7QUFFQSxNQUFNUyxvQ0FBY1AsU0FBUyxJQUFJUSxtQkFBSixDQUFjUixLQUFkLENBQTdCIiwiZmlsZSI6InZhbGlkYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV2ViMyBmcm9tICd3ZWIzJztcbmltcG9ydCBCaWdOdW1iZXIgZnJvbSAnYmlnbnVtYmVyLmpzJztcblxuY29uc3Qgd2ViMyA9IG5ldyBXZWIzKCk7XG5cbmNvbnN0IHV1aWRSZSA9IC9bMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMC05YS1mXXs0fS1bMC05YS1mXXs0fS1bMC05YS1mXXsxMn0vaTtcbmNvbnN0IGV0aFRyYW5zUmUgPSAvXjB4KFtBLUZhLWYwLTldezY0fSkkLztcbmNvbnN0IFpFUk9fQUREUkVTUyA9ICcweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnO1xuXG5leHBvcnQgY29uc3QgaXNVdWlkID0gKHZhbHVlKSA9PiB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHV1aWRSZS50ZXN0KHZhbHVlKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBVVUlEJyk7XG59O1xuXG5leHBvcnQgY29uc3QgaXNFdGhUcmFuc2FjdGlvbiA9ICh2YWx1ZSkgPT4ge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiBldGhUcmFuc1JlLnRlc3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEVUSCBUcmFuc2FjdGlvbiBmb3JtYXQnKTtcbn07XG5cbmV4cG9ydCBjb25zdCBpc0V0aEFkZHJlc3MgPSB2YWx1ZSA9PiB3ZWIzLmlzQWRkcmVzcyh2YWx1ZSk7XG5cbmV4cG9ydCBjb25zdCBpc05vblplcm9FdGhBZGRyZXNzID0gdmFsdWUgPT4gKGlzRXRoQWRkcmVzcyh2YWx1ZSkgJiYgdmFsdWUgIT09IFpFUk9fQUREUkVTUyk7XG5cbmV4cG9ydCBjb25zdCB0b0JpZ051bWJlciA9IHZhbHVlID0+IG5ldyBCaWdOdW1iZXIodmFsdWUpO1xuIl19